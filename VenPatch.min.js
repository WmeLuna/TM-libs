let WEBPACK_CHUNK=Object.keys(window).find(e=>e.startsWith("webpackChunk")),cache,wreq,webpackChunk;var traces={};let IS_DEV=!0;const logger=console;function canonicalizeReplace(e,t){let r=`Vencord.Plugins.plugins[${JSON.stringify(t)}]`;return"function"!=typeof e?e.replaceAll("$self",r):(...t)=>e(...t).replaceAll("$self",r)}function canonicalizeDescriptor(e,t){if(e.get){let r=e.get;e.get=function(){return t(r.call(this))}}else e.value&&(e.value=t(e.value));return e}function canonicalizeMatch(e){if("string"==typeof e)return e;let t=e.source.replaceAll("\\i","[A-Za-z_$][\\w$]*");return RegExp(t,e.flags)}function canonicalizeReplacement(e,t){let r=Object.getOwnPropertyDescriptors(e);r.match=canonicalizeDescriptor(r.match,canonicalizeMatch),r.replace=canonicalizeDescriptor(r.replace,e=>canonicalizeReplace(e,t)),Object.defineProperties(e,r)}function _initWebpack(e){if(void 0!==cache)throw"no.";cache=(wreq=e.push([[Symbol("Vencord")],{},e=>e])).c,e.pop()}function beginTrace(e,...t){if(e in traces)throw Error(`Trace ${e} already exists!`);traces[e]=[performance.now(),t]}function finishTrace(e){let t=performance.now(),[r,n]=traces[e];delete traces[e],logger.debug(`${e} took ${t-r}ms`,n)}const traceFunction=function e(t,r,n){return function(...e){let c=n?.(...e)??t;beginTrace(c,...arguments);try{return r.apply(this,e)}finally{finishTrace(c)}}};function patchPush(){function handlePush(chunk){try{let modules=chunk[1],subscriptions=new Map,listeners=new Set;for(let id in modules){let mod=modules[id],code=mod.toString().replaceAll("\n","");code.startsWith("function(")&&(code="0,"+code);let originalMod=mod,patchedBy=new Set,factory=modules[id]=function(e,t,r){try{mod(e,t,r)}catch(n){if(mod===originalMod)throw n;return logger.error("Error in patched chunk",n),void originalMod(e,t,r)}let c=Number(id);for(let i of listeners)try{i(t,c)}catch(l){logger.error("Error in webpack listener",l)}for(let[a,o]of subscriptions)try{if(a(t))subscriptions.delete(a),o(t,c);else if("object"==typeof t)for(let u in t.default&&a(t.default)&&(subscriptions.delete(a),o(t.default,c)),t)u.length<=3&&t[u]&&a(t[u])&&(subscriptions.delete(a),o(t[u],c))}catch(p){logger.error("Error while firing callback for webpack chunk",p)}};try{factory.toString=()=>mod.toString(),factory.original=originalMod}catch{}for(let i=0;i<patches.length;i++){let patch=patches[i],executePatch=traceFunction(`patch by ${patch.plugin}`,(e,t)=>code.replace(e,t));if((!patch.predicate||patch.predicate())&&code.includes(patch.find)){for(let replacement of(patchedBy.add(patch.plugin),patch.replacement)){if(replacement.predicate&&!replacement.predicate())continue;let lastMod=mod,lastCode=code;canonicalizeReplacement(replacement,patch.plugin);try{let newCode=executePatch(replacement.match,replacement.replace);newCode!==code||patch.noWarn?(code=newCode,mod=(0,eval)(`// Webpack Module ${id} - Patched by ${[...patchedBy].join(", ")}
${newCode}
//# sourceURL=WebpackModule${id}`)):(logger.warn(`Patch by ${patch.plugin} had no effect (Module id is ${id}): ${replacement.match}`),IS_DEV&&logger.debug("Function Source:\n",code))}catch(err){if(logger.error(`Patch by ${patch.plugin} errored (Module id is ${id}): ${replacement.match}
`,err),IS_DEV){let changeSize=code.length-lastCode.length,match=lastCode.match(replacement.match),start=Math.max(0,match.index-200),end=Math.min(lastCode.length,match.index+match[0].length+200),endPatched=end+changeSize,context=lastCode.slice(start,end),patchedContext=code.slice(start,endPatched),diff=Diff.diffWordsWithSpace(context,patchedContext),fmt="%c %s ",elements=[];for(let d of diff){let color=d.removed?"red":d.added?"lime":"grey";fmt+="%c%s",elements.push("color:"+color,d.value)}}code=lastCode,mod=lastMod,patchedBy.delete(patch.plugin)}}patch.all||patches.splice(i--,1)}}}}catch(err){logger.error("Error in handlePush",err)}return handlePush.original.call(window[WEBPACK_CHUNK],chunk)}handlePush.original=window[WEBPACK_CHUNK].push,Object.defineProperty(window[WEBPACK_CHUNK],"push",{get:()=>handlePush,set:e=>handlePush.original=e,configurable:!0})}window[WEBPACK_CHUNK]?(logger.info(`Patching ${WEBPACK_CHUNK}.push (was already existant, likely from cache!)`),_initWebpack(window[WEBPACK_CHUNK]),patchPush()):Object.defineProperty(window,WEBPACK_CHUNK,{get:()=>webpackChunk,set(e){e?.push!==Array.prototype.push&&(logger.info(`Patching ${WEBPACK_CHUNK}.push`),_initWebpack(e),patchPush(),delete window[WEBPACK_CHUNK],window[WEBPACK_CHUNK]=e),webpackChunk=e},configurable:!0});
